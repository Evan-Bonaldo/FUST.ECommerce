@page "/admin/products"
@using FUST.ECommerce.Service
@inject ProductService ProductService
@inject CategoryService CategoryService

<h3>Gestione Prodotti</h3>

@if (products == null)
{
    <p>Caricamento prodotti...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Descrizione</th>
                <th>Prezzo</th>
                <th>Categoria</th>
                <th>Azioni</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.Price.ToString("C")</td>
                    <td>@(categories.FirstOrDefault(c => c.Id == product.CategoryId)?.Name ?? "Sconosciuta")</td>
                    <td>
                        <button class="btn btn-warning" @onclick="() => EditProduct(product)">Modifica</button>
                        <button class="btn btn-danger" @onclick="() => DeleteProduct(product.Id)">Elimina</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h4>@(editMode ? "Modifica Prodotto" : "Aggiungi Nuovo Prodotto")</h4>
    <EditForm Model="currentProduct" OnValidSubmit="SaveProduct">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label>Nome:</label>
            <InputText @bind-Value="currentProduct.Name" class="form-control" required />
        </div>
        <div class="mb-3">
            <label>Descrizione:</label>
            <InputTextArea @bind-Value="currentProduct.Description" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Prezzo:</label>
            <InputNumber @bind-Value="currentProduct.Price" class="form-control" required />
        </div>
        <div class="mb-3">
            <label>Categoria:</label>
            <InputSelect @bind-Value="currentProduct.CategoryId" class="form-control">
                @foreach (var category in categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
        </div>
        <button type="submit" class="btn btn-primary">Salva</button>
        <button type="button" class="btn btn-secondary" @onclick="CancelEdit">Annulla</button>
    </EditForm>
}

@code {
    private List<Product> products = new();
    private List<Category> categories = new();
    private Product currentProduct = new();
    private bool editMode = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        products = await ProductService.GetProductsAsync();
        categories = await CategoryService.GetCategoriesAsync();
    }

    private void EditProduct(Product product)
    {
        currentProduct = new Product
            {
                Id = product.Id,
                Name = product.Name,
                Description = product.Description,
                Price = product.Price,
                CategoryId = product.CategoryId
            };
        editMode = true;
    }

    private async Task SaveProduct()
    {
        if (editMode)
        {
            await ProductService.UpdateProductAsync(currentProduct);
        }
        else
        {
            await ProductService.AddProductAsync(currentProduct);
        }

        await LoadData();
        ResetForm();
    }

    private async Task DeleteProduct(int id)
    {
        await ProductService.DeleteProductAsync(id);
        await LoadData();
    }

    private void CancelEdit()
    {
        ResetForm();
    }

    private void ResetForm()
    {
        currentProduct = new Product();
        editMode = false;
    }
}
